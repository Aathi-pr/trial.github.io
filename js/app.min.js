document.addEventListener('DOMContentLoaded', () => {
    // Essential elements
    const hamburger = document.querySelector('.hamburger');
    const navLinks = document.querySelector('.nav-links');
    const spans = hamburger.querySelectorAll('span');
    const productImage = document.querySelector('.product-image');
    const preloader = document.querySelector('.pulse-container');
    const mainContent = document.getElementById('main-content');
    const heroContent = document.querySelector('.hero-content');
    const productShowcase = document.querySelector('.product-showcase');
    const orderContainer = document.querySelector('.order-container');
    const waves = document.querySelectorAll('.wave');

    // Initialize Intersection Observer for sections
    const sectionObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate');
                sectionObserver.unobserve(entry.target);
            }
        });
    }, {
        threshold: 0.2,
        rootMargin: '0px 0px -50px 0px'
    });

    // Hamburger menu functionality
    hamburger.addEventListener('click', () => {
        navLinks.classList.toggle('active');
        spans.forEach((span, index) => {
            if (navLinks.classList.contains('active')) {
                if (index === 1) span.style.transform = 'rotate(45deg) translate(5px, 5px)';
                if (index === 2) span.style.opacity = '0';
                if (index === 3) span.style.transform = 'rotate(-45deg) translate(5px, -6px)';
            } else {
                span.style.transform = 'none';
                span.style.opacity = '1';
            }
        });
    });

    // Smooth scrolling for navigation
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth'
                });
                if (navLinks.classList.contains('active')) {
                    navLinks.classList.remove('active');
                    spans.forEach(span => {
                        span.style.transform = 'none';
                        span.style.opacity = '1';
                    });
                }
            }
        });
    });

    // Animation utility function
    const animate = (element, keyframes, options) => {
        return element.animate(keyframes, options);
    };

    // Loading sequence
    const startLoadingSequence = () => {
        // Step 1: Fade out preloader
        setTimeout(() => {
            preloader.classList.add('fade-out');
        }, 2500);

        // Step 2: Show main content
        setTimeout(() => {
            mainContent.style.display = 'block';
            requestAnimationFrame(() => {
                mainContent.classList.add('visible');

                // Step 3: Animate hero content
                setTimeout(() => {
                    heroContent.classList.add('animate');
                }, 300);

                // Step 4: Observe sections for animation
                sectionObserver.observe(productShowcase);
                sectionObserver.observe(orderContainer);
            });
        }, 3000);
    };

    // Handle wave animations
    const handleMouseMove = (e) => {
        const x = e.clientX / window.innerWidth;
        const y = e.clientY / window.innerHeight;

        requestAnimationFrame(() => {
            waves.forEach((wave) => {
                wave.style.transform = `translateY(-${y * 10}%) translateX(${(x - 0.5) * 10}%)`;
            });
        });
    };

    // Form handling
    const form = document.getElementById('orderForm');
    const quantityBtns = document.querySelectorAll('.quantity-btn');
    let quantity = 1;

    // GSTIN validation
    function validateGSTIN(gstin) {
        const gstinRegex = /^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$/;
        return gstinRegex.test(gstin);
    }

    // Input validation
    function validateInput(input) {
        const group = input.closest('.input-group');
        const errorMessage = group.querySelector('.error-message');
        let isValid = true;
        let message = '';

        switch (input.id) {
            case 'gstin':
                isValid = validateGSTIN(input.value.trim().toUpperCase());
                message = 'Please enter a valid GSTIN number';
                break;
            case 'phoneNumber':
                isValid = /^\d{10}$/.test(input.value.trim());
                message = 'Please enter a valid 10-digit number';
                break;
            default:
                isValid = input.value.trim() !== '';
                message = 'This field is required';
        }

        group.classList.toggle('error', !isValid);
        errorMessage.textContent = isValid ? '' : message;

        if (!isValid) {
            shakeElement(group);
        }

        return isValid;
    }

    // Shake animation for invalid inputs
    function shakeElement(element) {
        element.animate([
            { transform: 'translateX(-10px)' },
            { transform: 'translateX(10px)' },
            { transform: 'translateX(-10px)' },
            { transform: 'translateX(10px)' },
            { transform: 'translateX(0)' }
        ], {
            duration: 500,
            easing: 'ease-out'
        });
    }

    // Quantity buttons handling
    quantityBtns.forEach(btn => {
        btn.addEventListener('click', () => {
            const isIncrease = btn.classList.contains('plus');
            const quantityDisplay = document.querySelector('.quantity');

            if (isIncrease && quantity < 100) {
                quantity++;
            } else if (!isIncrease && quantity > 1) {
                quantity--;
            }

            quantityDisplay.animate([
                { transform: 'scale(1.2)' },
                { transform: 'scale(1)' }
            ], {
                duration: 300,
                easing: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)'
            });

            quantityDisplay.textContent = quantity;
        });
    });

    // Form submission
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        let isValid = true;

        form.querySelectorAll('input, textarea').forEach(input => {
            if (!validateInput(input)) {
                isValid = false;
            }
        });

        if (isValid) {
            try {
                const formData = {
                    shopName: form.querySelector('[name="shopName"]').value,
                    gstin: form.querySelector('[name="gstin"]').value,
                    phoneNumber: form.querySelector('[name="phoneNumber"]').value,
                    address: form.querySelector('[name="address"]').value,
                    quantity: quantity
                };

                const response = await emailjs.send(
                    'service_5jkg54e',
                    'template_1qkz66s',
                    formData,
                    'H7f56Q3jqgH7Mm3fJ'
                );

                if (response.status === 200) {
                    const successMessage = document.querySelector('.success-message');
                    successMessage.style.display = 'block';

                    successMessage.animate([
                        { opacity: 0, transform: 'translateY(100px)' },
                        { opacity: 1, transform: 'translateY(0)' }
                    ], {
                        duration: 500,
                        easing: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                        fill: 'forwards'
                    });

                    setTimeout(() => {
                        successMessage.animate([
                            { opacity: 1, transform: 'translateY(0)' },
                            { opacity: 0, transform: 'translateY(100px)' }
                        ], {
                            duration: 500,
                            easing: 'ease-out',
                            fill: 'forwards'
                        });
                    }, 3000);

                    form.reset();
                    quantity = 1;
                    document.querySelector('.quantity').textContent = quantity;
                } else {
                    throw new Error('Email sending failed');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }
    });

    // Initialize
    window.addEventListener('load', startLoadingSequence);
    document.addEventListener('mousemove', handleMouseMove);
});